---
- name: Install Docker
  import_tasks: docker.yml

- name: Install Hashicorp stack - Nomad
  block:
    - name: Download Nomad - {{ nomad_version }}
      get_url:
        url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_amd64.zip"
        dest: "{{ download_dir }}/nomad-{{ nomad_version }}.zip"
        checksum: "{{ nomad_checksum }}" 

    - name: Expand Nomad and place in {{ binary_dir }}
      unarchive:
        src: "{{ download_dir }}/nomad-{{ nomad_version }}.zip"
        dest: "{{ binary_dir }}"
        remote_src: true
      notify:
        - Restart nomad

    - name: Cleanup
      file:
        path: "{{ download_dir }}/nomad-{{ nomad_version }}.zip"
        state: absent
  when: ansible_local.homelab.nomad_version != nomad_version

- name: Configure Hashicorp stack - Nomad
  block:
    - name: Create config directory
      file:
        path: /etc/nomad.d
        state: directory
    
    - name: Nomad common config
      template:
        src: templates/common.j2
        dest: /etc/nomad.d/common.hcl
      notify:
        - Restart nomad

    - name: Nomad client config
      template:
        src: templates/client.j2
        dest: /etc/nomad.d/client.hcl
      notify:
        - Restart nomad

    - name: Nomad server config
      template:
        src: templates/server.j2
        dest: /etc/nomad.d/server.hcl
      notify:
        - Restart nomad
      when: nomad_type == "server"

    - name: Nomad setup systemd for server
      copy:
        src: nomad-server.systemd
        dest: /etc/systemd/system/nomad.service
      when: nomad_type == "server"
      notify:
        - Restart nomad

    - name: Nomad setup systemd for client
      copy:
        src: nomad-client.systemd
        dest: /etc/systemd/system/nomad.service
      when: nomad_type == "client"
      notify:
        - Restart nomad

          #    - name: Setup NFS directories and mounts
          #      block:
          #        - name: NFS - Create directories - photoprism
          #          file:
          #            path: /mnt/photoprism
          #            state: directory
          #
          #        - name: NFS - Create directories - prometheus
          #          file:
          #            path: /mnt/prometheus
          #            state: directory
          #
          #        - name: NFS - Create directories - registry
          #          file:
          #            path: /mnt/registry
          #            state: directory
          #
          #        - name: NFS - Create directories - orginals 
          #          file:
          #            path: /mnt/originals
          #            state: directory
          #        
          #        - name: NFS - Create directories - vaultwarden
          #          file:
          #            path: /mnt/vaultwarden
          #            state: directory
          #        
          #    - name: NFS mounting - homelab cluster
          #      block:
          #        - name: NFS - Mount - photoprism
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad/photoprism
          #            path: /mnt/photoprism
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #
          #        - name: NFS - Mount - photoprism - original media
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/NAS/photo
          #            path: /mnt/originals
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #         
          #        - name: NFS - Mount - prometheus
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad/prometheus
          #            path: /mnt/prometheus
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #
          #        - name: NFS - Mount - registry
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad/registry
          #            path: /mnt/registry
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #      when: nomad_datacenter == "homelab"
          #
          #    - name: NFS mounting - testing cluster
          #      block:
          #        - name: NFS - Mount - photoprism
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad-test/photoprism
          #            path: /mnt/photoprism
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #        
          #        - name: NFS - Mount - photoprism - originals test
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad-test/photos
          #            path: /mnt/originals
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #        
          #        - name: NFS - Mount - prometheus
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad-test/prometheus
          #            path: /mnt/prometheus
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #
          #        - name: NFS - Mount - registry
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad-test/registry
          #            path: /mnt/registry
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #
          #        - name: NFS - Mount - vaultwarden
          #          ansible.posix.mount:
          #            src: truenas.qkroode.nl:/mnt/homelab/nomad-test/vaultwarden
          #            path: /mnt/vaultwarden
          #            fstype: nfs
          #            opts: rw,sync
          #            state: mounted
          #      when: nomad_datacenter == "testing"
    
    - name: Nomad systemd enabled and started
      systemd:
        name: nomad
        enabled: true
        state: started
